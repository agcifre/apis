<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2017 sp1 (http://www.altova.com) by YFE (Service Public de Wallonie) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:per="http://soa.spw.wallonie.be/data/entity/person/v2" xmlns:nam="http://soa.spw.wallonie.be/data/entity/person/name/v1" xmlns:addr="http://soa.spw.wallonie.be/data/entity/address/address/v2" xmlns:nat="http://soa.spw.wallonie.be/data/entity/person/nationality/v1" xmlns:num="http://soa.spw.wallonie.be/data/entity/person/number/v2" xmlns:bir="http://soa.spw.wallonie.be/data/entity/person/birth/v2" xmlns:dec="http://soa.spw.wallonie.be/data/entity/person/decease/v2" xmlns:civ="http://soa.spw.wallonie.be/data/entity/person/civilstate/v2" xmlns:pro="http://soa.spw.wallonie.be/data/entity/person/profession/v1" xmlns:dat="http://soa.spw.wallonie.be/data/common/date/v1" xmlns:cod="http://soa.spw.wallonie.be/data/common/code/v2" xmlns:lab="http://soa.spw.wallonie.be/data/common/label/v1" xmlns:photo="http://soa.spw.wallonie.be/data/entity/photo/v1" targetNamespace="http://soa.spw.wallonie.be/data/entity/person/v2" elementFormDefault="qualified" attributeFormDefault="unqualified" version="2.00">
	<xs:annotation>
		<xs:documentation>
			Definitions of person types.
		</xs:documentation>
	</xs:annotation>
	<xs:import namespace="http://soa.spw.wallonie.be/data/entity/person/name/v1" schemaLocation="name_v1.xsd"/>
	<xs:import namespace="http://soa.spw.wallonie.be/data/entity/address/address/v2" schemaLocation="../address/address_v2.xsd"/>
	<xs:import namespace="http://soa.spw.wallonie.be/data/entity/person/number/v2" schemaLocation="personNumber_v2.xsd"/>
	<xs:import namespace="http://soa.spw.wallonie.be/data/common/date/v1" schemaLocation="../../common/date_v1.xsd"/>
	<xs:import namespace="http://soa.spw.wallonie.be/data/common/code/v2" schemaLocation="../../common/code_v2.xsd"/>
	<xs:import namespace="http://soa.spw.wallonie.be/data/common/label/v1" schemaLocation="../../common/labels_v1.xsd"/>
	<xs:import namespace="http://soa.spw.wallonie.be/data/entity/person/birth/v2" schemaLocation="birth_v2.xsd"/>
	<xs:import namespace="http://soa.spw.wallonie.be/data/entity/person/decease/v2" schemaLocation="decease_v2.xsd"/>
	<xs:import namespace="http://soa.spw.wallonie.be/data/entity/person/civilstate/v2" schemaLocation="civilState_v2.xsd"/>
	<xs:import namespace="http://soa.spw.wallonie.be/data/entity/person/profession/v1" schemaLocation="profession_v1.xsd"/>
	<xs:import namespace="http://soa.spw.wallonie.be/data/entity/person/nationality/v1" schemaLocation="nationality_v1.xsd"/>
	<xs:import namespace="http://soa.spw.wallonie.be/data/entity/photo/v1" schemaLocation="photo_v1.xsd"/>
	<xs:element name="personNumber" type="num:PersonNumberType" nillable="true"/>
	<xs:element name="name" type="nam:NameType" nillable="true"/>
	<xs:element name="gender" type="cod:CodeType" nillable="true"/>
	<xs:element name="nationality" type="cod:CodeType" nillable="true"/>
	<xs:element name="birthPlace" type="addr:PlaceType" nillable="true"/>
	<xs:element name="officialBirthDate" type="dat:IncompleteDateType" nillable="true"/>
	<xs:element name="deceasePlace" type="addr:PlaceType" nillable="true"/>
	<xs:element name="officialDeceaseDate" type="dat:IncompleteDateType" nillable="true"/>
	<xs:element name="civilState" type="cod:CodeType" nillable="true"/>
	<xs:element name="personIdentification" type="per:PersonIdentificationType" nillable="false"/>
	<xs:complexType name="PersonIdentificationType">
		<xs:annotation>
			<xs:documentation>
				The base class for person types. The base person must contain a person number and a name.
				If, for whatever reason, these do not exist or cannot be filled in, they must explicitly
				be set to nil.
				The base class is abstract and no non-abstract elements can exist with this type. Its sole
				purpose is to define the mandatory fields of a person. Instances must use any of the subtypes.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence/>
		<xs:attribute name="trust" type="cod:TrustType" use="optional"/>
		<xs:attribute name="source" type="cod:CodeSourceType" use="optional"/>
	</xs:complexType>
	<xs:complexType name="PersonType">
		<xs:annotation>
			<xs:documentation>
				A detailed person is a simple person, with additional, optional information. 
				The detailed person is modelled after the information present in the Belgian National Register.
				Information that is not relevant to certain applications/services may be omitted.
				All fields are nillable, but fields should only be set to nil if the information is deliberately
				witheld.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="personNumber" type="num:PersonNumberType"/>
			<xs:element name="name" type="nam:NameType"/>
			<xs:element name="gender" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="cod:CodeType">
							<xs:attribute name="inceptionDate" type="xs:date"/>
							<xs:attribute name="modificationDate" type="xs:date"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="nationalities" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="nationality" maxOccurs="20">
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="cod:CodeType">
										<xs:attribute name="inceptionDate" type="xs:date"/>
										<xs:attribute name="modificationDate" type="xs:date"/>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="addresses" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="address" type="addr:AddressType" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="diplomaticPost" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="diplomaticPlace" type="addr:PlaceType" minOccurs="0"/>
						<xs:element name="diplomaticCode" type="cod:CodeType" minOccurs="0"/>
					</xs:sequence>
					<xs:attribute name="inceptionDate" type="xs:date"/>
					<xs:attribute name="modificationDate" type="xs:date"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="nobilityTitle" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="cod:CodeType">
							<xs:attribute name="inceptionDate" type="xs:date"/>
							<xs:attribute name="modificationDate" type="xs:date"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="professions" nillable="true" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="profession" type="pro:ProfessionType" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="civilStates" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="civilState" nillable="true" maxOccurs="20">
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="civ:CivilStateInformationType">
										<xs:attribute name="inceptionDate" type="xs:date"/>
										<xs:attribute name="modificationDate" type="xs:date"/>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="legalCohabitation" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="partner" type="civ:PartnerType"/>
						<xs:element name="registration">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="registrationDate" type="xs:date"/>
									<xs:element name="registrationPlace" type="addr:PlaceType"/>
									<xs:element name="registrationBailiff" minOccurs="0">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="bailiffName" type="xs:string"/>
												<xs:element name="bailiffPlace" type="addr:PlaceType" minOccurs="0"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="inceptionDate" type="xs:date"/>
					<xs:attribute name="modificationDate" type="xs:date"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="birth" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="birthPlace" type="addr:PlaceType" minOccurs="0"/>
						<xs:element name="officialBirthDate" type="dat:IncompleteDateType"/>
						<xs:element name="birthAct" type="bir:BirthActType" nillable="true" minOccurs="0"/>
					</xs:sequence>
					<xs:attribute name="inceptionDate" type="xs:date"/>
					<xs:attribute name="modificationDate" type="xs:date"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="decease" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="deceasePlace" type="addr:PlaceType" minOccurs="0"/>
						<xs:element name="officialDeceaseDate" type="dat:IncompleteDateType" minOccurs="0"/>
						<xs:element name="deceaseAct" type="dec:DeceaseActType" nillable="true" minOccurs="0"/>
					</xs:sequence>
					<xs:attribute name="inceptionDate" type="xs:date"/>
					<xs:attribute name="modificationDate" type="xs:date"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="administrator" minOccurs="0">
				<xs:complexType>
					<xs:choice>
						<xs:element name="location" type="addr:PlaceType"/>
						<xs:element name="specialNotion" type="cod:CodeType"/>
					</xs:choice>
					<xs:attribute name="inceptionDate"/>
					<xs:attribute name="modificationDate"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="photo" type="photo:PhotoType" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="source" type="xs:string"/>
		<xs:attribute name="register">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Population"/>
					<xs:enumeration value="Stranger"/>
					<xs:enumeration value="Diplomatic"/>
					<xs:enumeration value="Bis"/>
					<xs:enumeration value="Ter"/>
					<xs:enumeration value="Radiation"/>
					<xs:enumeration value="Birth"/>
					<xs:enumeration value="Stranger_familyMembers"/>
					<xs:enumeration value="EuropeanFunctionary"/>
					<xs:enumeration value="Waiting"/>
					<xs:enumeration value="Waiting_EU"/>
					<xs:enumeration value="Waiting_Asylum"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="inceptionDate" type="xs:date"/>
		<xs:attribute name="modificationDate" type="xs:date"/>
	</xs:complexType>
	<xs:element name="person" type="per:PersonType">
		<xs:annotation>
			<xs:documentation>Root element holding a person of one of the subtypes.</xs:documentation>
			<!-- 
			Because not all XML web service frameworks correctly interprete substitution groups, it was decided
			to work with XML choices instead of substitution groups. This means that you will always have an element
			'person' which contains a subelement 'simplePerson' or 'detailedPerson.'
			Using substitution groups would be simpler and yields cleaner XML; it also more extensible and looser
			coupled than choice groups. Hence, it is advisable to change the choice-group constructions in the
			future and to prefer substitution groups.
			-->
		</xs:annotation>
	</xs:element>
	<!--Declaration types-->
	<xs:complexType name="PersonDeclarationType">
		<xs:sequence>
			<xs:element name="person" type="per:PersonDeclarationRequestType">
				<xs:annotation>
					<xs:documentation>Element containing the person information to be used to register a person</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PersonDeclarationRequestType">
		<xs:complexContent>
			<xs:extension base="per:PersonBaseDeclarationRequestType">
				<xs:attribute name="register" use="required">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="Bis"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PersonBaseDeclarationRequestType">
		<xs:annotation>
			<xs:documentation>Type containing the data necessary to create a new person or update person data</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="per:NameDeclarationType"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="gender" type="per:GenderDeclarationType" minOccurs="0"/>
			<xs:choice>
				<xs:element name="foreignAddress" type="addr:ForeignAddressDeclarationType" minOccurs="0"/>
				<xs:element name="belgianAddress" type="addr:BelgianAddressDeclarationType" minOccurs="0"/>
			</xs:choice>
			<xs:element name="nationalities" type="per:NationalitiesDeclarationType" minOccurs="0"/>
			<xs:element name="civilStates" type="per:CivilStatesDeclarationType" minOccurs="0"/>
			<xs:element name="birth" type="per:BirthDeclarationType" minOccurs="0"/>
			<xs:element name="decease" type="per:DeceaseDeclarationType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NameDeclarationType">
		<xs:complexContent>
			<xs:extension base="nam:NameBaseDeclarationType">
				<xs:attribute name="inceptionDate" type="xs:date" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="NationalitiesBaseDeclarationType">
		<xs:sequence>
			<xs:element name="nationality" type="nat:NationalityDeclarationType" maxOccurs="10"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NationalitiesDeclarationType">
		<xs:complexContent>
			<xs:extension base="per:NationalitiesBaseDeclarationType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="BirthDeclarationType">
		<xs:sequence>
			<xs:element name="officialBirthDate" type="dat:IncompleteDateType"/>
			<xs:element name="birthPlace" type="addr:PlaceDeclarationType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DeceaseDeclarationType">
		<xs:sequence>
			<xs:element name="deceasePlace" type="addr:PlaceDeclarationType" minOccurs="0"/>
			<xs:element name="officialDeceaseDate" type="dat:IncompleteDateType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GenderBaseDeclarationType">
		<xs:sequence>
			<xs:element name="code" type="per:GenderCodeType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GenderDeclarationType">
		<xs:complexContent>
			<xs:extension base="per:GenderBaseDeclarationType">
				<xs:attribute name="inceptionDate" type="xs:date" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CivilStatesDeclarationType">
		<xs:sequence>
			<xs:element name="civilState" type="civ:CivilStateDeclarationType" maxOccurs="10"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RegisterPersonResultType">
		<xs:sequence>
			<xs:element name="personNumber" type="num:PersonNumberType"/>
		</xs:sequence>
	</xs:complexType>
	<!--Basic building blocks-->
	<xs:simpleType name="GenderCodeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="M"/>
			<xs:enumeration value="F"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
